Quick and Dirty AFS Archive Documentation
-----------------------------------------

--------------------------------------------------------------------------------
                                 Introduction
--------------------------------------------------------------------------------

This text file explains the format of AFS archive files, as used in Phantasy
Star Online. These are probably the same as those used by other games as a
container for multiple ADX files, but I've never looked at any of those other
games to say for sure.

The AFS archive file format is exceedingly simplistic and, in many ways,
inadequate for an archive file format. There is no compression in the file
format itself, although you can obviously compress AFS archives with whatever
compression tool you want if you use them for your own purposes (why you would
is not covered here, since there is no good reason to ever use them). The table
of files in the archive does not store filenames, so you're on your own to
figure out what each file is within the archive. The file table is padded out to
the (what I assume to be) maximum number of entries within the table. Based on
the size of the table, the maximum number of files within one AFS archive is
65535, although PSO doesn't tend to store all that many files in one (ItemPT.afs
and ItemRT.afs store MANY fewer files than that in the archive, leading to a lot
of wasted space for the header -- about 500KB of wasted space, to be exact). In
addition, files within the archive are padded out to 2KiB boundaries, possibly
to aid in alignment on sector boundaries on a GD-ROM.

Now that that is out of the way, onto the specifics of the file format...

--------------------------------------------------------------------------------
                                 File Format
--------------------------------------------------------------------------------

All multi-byte numeric types used in an AFS archive are stored in little-endian
(Intel) byte ordering.

All AFS archives consist of 3 parts, which always appear in the same order. That
is a File header, a File table, and the individual files stored in the archive.
Of these, the file header and file table are of fixed-length (although, it seems
that PSO does handle variable-length file tables just fine). Files are stored
one after the other, with padding between as necessary to pad each file to a
2KiB boundary.

File Header (8 bytes):
    4 bytes - Magic Number to identify the file as an AFS archive
        0x00534641 - or 'AFS\0' in ASCII
    4 bytes - Number of files stored in the archive
        I'm assuming the max is 65535 here, so this could be a 2 byte file count
        and two bytes of padding, but it's just as easy to assume it's a 4 byte
        file count

File Table (524280 bytes):
Each 8 bytes represents a single file in the archive. Unused entries should
simply contain zeroes. Entries are arranged as follows:
    4 bytes - Byte offset within the archive where the file data starts
        In normal archives, this will always be >= 0x80000, as the file table
        and file header will take up to that point in the file.
    4 bytes - Byte length of the data of the file.

Archived Files (variable length):
Each file follows at the positions specified in the file table above. Files are
padded to 2KiB boundaries, probably for alignment purposes on a GD-ROM.
